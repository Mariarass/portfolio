/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Donte_Loves_Art (https://sketchfab.com/Donte_Loves_Art)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/chu-li-2354eba320b34804a58f63264417690b
Title: Chu-Li
*/

import React, {useEffect, useRef, useState} from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import {Color, MeshStandardMaterial, TextureLoader} from 'three';
import useStore from "../../store/store";

export function FirstGirl(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/firstGirl.gltf");
  const { actions } = useAnimations(animations, group);
  const [position, setPosition] = useState([0, -1.8, 0]);
  const [rotationY, setRotationY] = useState(0);
  const [rotationX, setRotationX] = useState(0);


  const { firstGirlColors } = useStore();

  const hairMaterial = firstGirlColors.hair!=null?new MeshStandardMaterial({ color: firstGirlColors.hair }):materials.hair
  const topMaterial =firstGirlColors.top!=null? new MeshStandardMaterial({ color: firstGirlColors.top }):materials.Blue
  const pantsMaterial = firstGirlColors.pants!=null?new MeshStandardMaterial({ color: firstGirlColors.pants }):materials.Blue


  useEffect(() => {
    Object.values(actions)[0].play()

  });
  useEffect(() => {
    const handleKeyDown = (event) => {
      switch (event.key) {
        case 'ArrowUp':
          setPosition((prevPosition) => [prevPosition[0], prevPosition[1], prevPosition[2] - 0.1]);
          setRotationY((prevRotation) => prevRotation + Math.PI);
          break;
        case 'ArrowDown':
          setPosition((prevPosition) => [prevPosition[0], prevPosition[1], prevPosition[2] + 0.1]);
          break;
        case 'ArrowLeft':
          setPosition((prevPosition) => [prevPosition[0] - 0.1, prevPosition[1], prevPosition[2]]);
          setRotationY((prevRotation) => prevRotation + Math.PI / 2)
          break;
        case 'ArrowRight':
          setPosition((prevPosition) => [prevPosition[0] + 0.1, prevPosition[1], prevPosition[2]]);
          break;
        default:
          break;
      }
    };

    window.addEventListener('keydown', handleKeyDown);
    return () => {
      window.removeEventListener('keydown', handleKeyDown);
    };
  }, []);






  return (
      <group ref={group} {...props} dispose={null} position={position}  rotation={[rotationX, rotationY, 0]}>
        <group name="Sketchfab_Scene">
          <group
              name="Sketchfab_model"
              rotation={[-Math.PI / 2, 0, 0]}
              scale={1.8}
          >
            <group
                name="6d1ca3633ab1499a936a797cf1177c6afbx"
                rotation={[Math.PI / 2, 0, 0]}
                scale={0.01}
            >
              <group name="Object_2">
                <group name="RootNode">
                  <group
                      name="Armature"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={100}
                  >
                    <group name="Object_11">
                      <primitive object={nodes._rootJoint} />
                      <skinnedMesh
                          name="Object_14"
                          geometry={nodes.Object_14.geometry}
                          material={materials.Gold}
                          skeleton={nodes.Object_14.skeleton}
                      />
                      <skinnedMesh
                          name="Object_15"
                          geometry={nodes.Object_15.geometry}
                          material={topMaterial}

                          skeleton={nodes.Object_15.skeleton}
                      />
                      {/*material={materials.Blue}*/}
                      <skinnedMesh
                          name="Object_17"
                          geometry={nodes.Object_17.geometry}
                          material={pantsMaterial}
                          skeleton={nodes.Object_17.skeleton}
                      />
                      {/*material={materials.Blue}*/}
                      <skinnedMesh
                          name="Object_18"
                          geometry={nodes.Object_18.geometry}
                          material={materials.Gold}
                          skeleton={nodes.Object_18.skeleton}
                      />
                      <skinnedMesh
                          name="Object_20"
                          geometry={nodes.Object_20.geometry}
                          material={hairMaterial}
                          skeleton={nodes.Object_20.skeleton}
                      />
                      <skinnedMesh
                          name="Object_22"
                          geometry={nodes.Object_22.geometry}
                          material={materials.skin}
                          skeleton={nodes.Object_22.skeleton}
                      />
                      <skinnedMesh
                          name="Object_23"
                          geometry={nodes.Object_23.geometry}
                          material={materials.nails}
                          skeleton={nodes.Object_23.skeleton}
                      />
                      <skinnedMesh
                          name="Object_25"
                          geometry={nodes.Object_25.geometry}
                          material={materials.eyes}
                          skeleton={nodes.Object_25.skeleton}
                      />
                      <skinnedMesh
                          name="Object_27"
                          geometry={nodes.Object_27.geometry}
                          material={materials.bracelet}
                          skeleton={nodes.Object_27.skeleton}
                      />
                      <skinnedMesh
                          name="Object_103"
                          geometry={nodes.Object_103.geometry}
                          material={materials.eyes}
                          skeleton={nodes.Object_103.skeleton}
                      />
                      <skinnedMesh
                          name="Object_105"
                          geometry={nodes.Object_105.geometry}
                          material={materials.hair}
                          skeleton={nodes.Object_105.skeleton}
                      />
                      <skinnedMesh
                          name="Object_107"
                          geometry={nodes.Object_107.geometry}
                          material={materials.hair}
                          skeleton={nodes.Object_107.skeleton}
                      />
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
  );
}

useGLTF.preload("/firstGirl.gltf");

